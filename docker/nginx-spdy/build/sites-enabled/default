# env APP_ES_1_PORT_9200_TCP_ADDR
# env APP_ES_1_PORT_9200_TCP_PORT

upstream lb-es {
      ip_hash;
      server es:9200 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-1
   #   server 192.168.1.101:9200 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
   # server $ENV{"APP_ES_1_PORT_9200_TCP_ADDR"}:$ENV{"APP_ES_1_PORT_9200_TCP_PORT"} weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
}

upstream lb-ttserver {
      ip_hash;
      server ttserver:8000 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-1
   #   server 192.168.1.101:9200 weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
   # server $ENV{"TTSERVER_1_PORT_8000_TCP_ADDR"}:$ENV{"TTSERVER_1_PORT_8000_TCP_PORT"} weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
   # server $ENV{"TTSERVER_2_PORT_8000_TCP_ADDR"}:$ENV{"TTSERVER_2_PORT_8000_TCP_PORT"} weight=10 max_fails=3 fail_timeout=30s; # Reverse proxy to machine-2
}


#server {
#    listen 80;
#    return 301 https://$host$request_uri;
#}


server {
    listen 80;
    listen 443 default_server ssl spdy;

    #ssl on;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    # http://www.bsdnow.tv/tutorials/nginx
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    # Intermediate cypersuite :https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28default.29
    ## TODO Test Session https://www.ssllabs.com/ssltest/index.html
    # ###############################################################
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:50m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # cd /etc/ssl/certs && openssl dhparam -out dhparam.pem 2048
    ssl_dhparam  /etc/nginx/ssl/dhparam.pem;


    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;

     # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
     add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    location / {
     # gzip_static on;
     #  gunzip on;



       root /data/wwww;
       index index.html index.html;
       expires 0;
       etag on;
       add_header Cache-Control "private";
   }

     location /components/ {
       root /data/wwww;
       expires 1h;
       etag on;
       add_header Cache-Control "private";
     }

     location /esd/ {
        rewrite  ^/esd/(.*)  /$1 break;

        proxy_pass http://lb-es; # Load balance the URL location "/" to the upstream lb-subprint
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # proxy_read_timeout 600s;
        # proxy_buffering off;
     }

     location /s/ {

        proxy_pass http://lb-ttserver; # Load balance the URL location "/" to the upstream lb-subprint
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
      }

     location /status {
         stub_status;
     }

     location /head {
        proxy_pass http://lb-es/_plugin/head; # Load balance the URL location "/" to the upstream lb-subprint
        proxy_http_version 1.1;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
     }

}
